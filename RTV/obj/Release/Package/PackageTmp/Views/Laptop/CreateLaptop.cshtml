@model RTV.Models.Laptop

@{
    ViewBag.Title = "CreateLaptop";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<img class="img-responsive" src="~/Content/laptop.jpg" style="width:100%;">
<h2>Utwórz Laptop w systemie</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       

        <div class="form-group">
            @Html.LabelFor(model => model.Nazwa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nazwa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nazwa, "", new { @class = "text-danger" })
            </div>
        </div>

     

        <div class="form-group">
            @Html.LabelFor(model => model.Marka, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Marka, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Marka, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
            </div>
        </div>
		
		 <div class="form-group">
            @Html.LabelFor(model => model.Rozdzielczosc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rozdzielczosc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rozdzielczosc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Przekatna, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Przekatna, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Przekatna, "", new { @class = "text-danger" })
            </div>
        </div>
		
		

        <div class="form-group">
            @Html.LabelFor(model => model.SeriaProcesora, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SeriaProcesora, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SeriaProcesora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IloscRdzeni, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IloscRdzeni, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IloscRdzeni, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RAM, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RAM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RAM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PamiecGrafika, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PamiecGrafika, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PamiecGrafika, "", new { @class = "text-danger" })
            </div>
        </div>

		<div class="form-group">
            @Html.LabelFor(model => model.Pojemnosc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pojemnosc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pojemnosc, "", new { @class = "text-danger" })
            </div>
        </div>
		
		 <div class="form-group">
            @Html.LabelFor(model => model.Stan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.Stan, new List<SelectListItem>
    {
                        new SelectListItem() {Text = "Nowy", Value="Nowy"},
                        new SelectListItem() {Text = "Używany", Value="Uzywany"},
    }, new { @class = "btn btn-secondary dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.Stan, "", new { @class = "text-danger" })
            </div>
        </div>
		
        <div class="form-group">
            @Html.LabelFor(model => model.System, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.System, new List<SelectListItem>
    {
                        new SelectListItem() {Text = "XP", Value="XP"},
                        new SelectListItem() {Text = "Vista", Value="Vista"},
                        new SelectListItem() {Text = "7", Value="7"},
                        new SelectListItem() {Text = "8", Value="8"},
                        new SelectListItem() {Text = "10", Value="10"},
    }, new { @class = "btn btn-secondary dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.System, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Zlacza, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.Zlacza, new List<SelectListItem>
    {
                        new SelectListItem() {Text = "HDMI", Value="HDMI"},
                        new SelectListItem() {Text = "DVI", Value="DVI"},
                        new SelectListItem() {Text = "VGA", Value="VGA"},
                        new SelectListItem() {Text = "DisplayPort", Value="DisplayPort"},
    }, new { @class = "btn btn-secondary dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.Zlacza, "", new { @class = "text-danger" })
            </div>
        </div>

        
       

       
		
		   <div class="form-group">
            @Html.LabelFor(model => model.Cena, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cena, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cena, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sprzedany, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.Sprzedany, new List<SelectListItem>
    {

                        new SelectListItem() {Text = "Nie", Value="False",Selected=true},
                         new SelectListItem() {Text = "Tak", Value="True"},
    }, new { @class = "btn btn-secondary dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.Sprzedany, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Utwórz" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Wróć do listy laptopów", "Laptopy", "Laptop")
</div>
