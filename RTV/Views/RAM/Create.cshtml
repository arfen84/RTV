@model RTV.Models.RAM

@{
    Layout = null;
}

@{
    ViewBag.Title = "Pamięci RAM";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<img class="img-responsive" src="~/Content/RAM.jpg" style="width:100%;">
<h2>Utwórz pamięci RAM w systemie</h2>

<p>
    @Html.ActionLink("< Pełna lista produktów", "Index", "Product")

</p>
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
          <div class="form-group">
                @Html.LabelFor(model => model.Nazwa, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nazwa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nazwa, "", new { @class = "text-danger" })
                </div>
            </div>

    
            <div class="form-group">
                @Html.LabelFor(model => model.Marka, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Marka, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Marka, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Opis, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Opis, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
                </div>
            </div>
			
			  <div class="form-group">
                @Html.LabelFor(model => model.Chlodzenie, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Chlodzenie)
                        @Html.ValidationMessageFor(model => model.Chlodzenie, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
			
			 <div class="form-group">
                @Html.LabelFor(model => model.Czestotliwosc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Czestotliwosc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Czestotliwosc, "", new { @class = "text-danger" })
                </div>
            </div>
			
			 <div class="form-group">
                @Html.LabelFor(model => model.Moduly, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Moduly, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Moduly, "", new { @class = "text-danger" })
                </div>
            </div>
			
			<div class="form-group">
                @Html.LabelFor(model => model.Napiecie, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Napiecie, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Napiecie, "", new { @class = "text-danger" })
                </div>
            </div>
			
			    <div class="form-group">
                @Html.LabelFor(model => model.Opoznienie, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Opoznienie, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Opoznienie, "", new { @class = "text-danger" })
                </div>
            </div>
			
          
            <div class="form-group">
                @Html.LabelFor(model => model.Pojemnosc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Pojemnosc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Pojemnosc, "", new { @class = "text-danger" })
                </div>
            </div>
    
             <div class="form-group">
                @Html.LabelFor(model => model.Typ, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Typ, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Typ, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Stan, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.Stan, new List<SelectListItem>
    {
                        new SelectListItem() {Text = "Nowy", Value="Nowy"},
                        new SelectListItem() {Text = "Używany", Value="Uzywany"},
    }, new { @class = "btn btn-secondary dropdown-toggle" })
                    @Html.ValidationMessageFor(model => model.Stan, "", new { @class = "text-danger" })
                </div>
            </div>
			
			 <div class="form-group">
                @Html.LabelFor(model => model.Cena, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cena, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cena, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Sprzedany, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.Sprzedany, new List<SelectListItem>
    {

                        new SelectListItem() {Text = "Nie", Value="False"},
                         new SelectListItem() {Text = "Tak", Value="True"},
    }, new { @class = "btn btn-secondary dropdown-toggle" })
                    @Html.ValidationMessageFor(model => model.Sprzedany, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Utwórz" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
       @Html.ActionLink("Wróć do listy pamięci RAM", "Pamieci")
    </div>
